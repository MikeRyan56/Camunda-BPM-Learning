<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>

<groupId>org.devsetgo.bpm.camunda</groupId>
<artifactId>learning</artifactId>
<version>0.1.4.5</version>
<packaging>jar</packaging>

<name>learning-camunda</name>
<description>Learning Camunda - contains basic prccesses to learn from. Source code on Github.com/StuRyan56</description>

<parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.0.3.RELEASE</version>
	<relativePath/>
	<!-- lookup parent from repository -->
</parent>

<properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	<java.version>1.8</java.version>
	<camunda.spring.boot.starter.version>3.2.0</camunda.spring.boot.starter.version>
	<docker.image.prefix>mikeryan56/learning-camunda</docker.image.prefix>
</properties>

<dependencies>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter</artifactId>
	</dependency>
    <!-- Begin DB dependency -->
    <dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<scope>runtime</scope>
	</dependency>
    <!-- https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client -->
    <!--<dependency>-->
        <!--<groupId>org.mariadb.jdbc</groupId>-->
        <!--<artifactId>mariadb-java-client</artifactId>-->
        <!--<version>2.2.6</version>-->
    <!--</dependency>-->
    <!-- End DB dependency -->
    <dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
	<dependency>
		<groupId>org.codehaus.groovy</groupId>
		<artifactId>groovy-all</artifactId>
		<!--<version>2.3.11</version>-->
		<!--<scope>test</scope>-->
	</dependency>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>
	<!--  Camunda Dependencies -->
	<dependency>
		<groupId>org.camunda.bpm.springboot</groupId>
		<artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
		<version>${camunda.spring.boot.starter.version}</version>
	</dependency>
	<dependency>
		<groupId>org.camunda.bpm.springboot</groupId>
		<artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
		<version>${camunda.spring.boot.starter.version}</version>
	</dependency>
	<dependency>
		<groupId>org.camunda.bpm.springboot</groupId>
		<artifactId>camunda-bpm-spring-boot-starter-test</artifactId>
		<version>${camunda.spring.boot.starter.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.camunda.connect</groupId>
		<artifactId>camunda-connect-core</artifactId>
		<version>1.0.6</version>
	</dependency>


	<dependency>
		<groupId>org.camunda.connect</groupId>
		<artifactId>camunda-connect-http-client</artifactId>
		<version>1.1.4</version>
	</dependency>
	<dependency>
		<groupId>org.camunda.connect</groupId>
		<artifactId>camunda-connect-soap-http-client</artifactId>
		<version>1.0.6</version>
	</dependency>
	<dependency>
		<groupId>org.camunda.spin</groupId>
		<artifactId>camunda-spin-core</artifactId>
		<version>1.6.7</version>
	</dependency>
	<dependency>
		<groupId>org.camunda.spin</groupId>
		<artifactId>camunda-spin-dataformat-all</artifactId>
		<version>1.5.0</version>
	</dependency>
	<dependency>
		<groupId>org.camunda.bpm</groupId>
		<artifactId>camunda-engine-plugin-spin</artifactId>
		<version>7.10.0</version>
	</dependency>
	<dependency>
		<groupId>org.camunda.bpm</groupId>
		<artifactId>camunda-engine</artifactId>
		<version>7.10.0</version>
	</dependency>
</dependencies>

<build>
	<plugins>
		<plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<configuration>
				<layout>ZIP</layout>
			</configuration>
			<executions>
				<execution>
					<goals>
						<goal>repackage</goal>
					</goals>
					<configuration>
						<mainClass>org.devsetgo.bpm.camunda.learning.LearningApplication</mainClass>
					</configuration>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.3.1</version>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
			</configuration>
		</plugin>
		<!--<plugin>-->
			<!--<groupId>com.spotify</groupId>-->
			<!--<artifactId>docker-maven-plugin</artifactId>-->
			<!--<version>1.1.1</version>-->
			<!--<configuration>-->
				<!--<imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
				<!--<dockerDirectory>src/main/docker</dockerDirectory>-->
				<!--<resources>-->
					<!--<resource>-->
						<!--<targetPath>/</targetPath>-->
						<!--<directory>${project.build.directory}</directory>-->
						<!--<include>${project.build.finalName}.jar</include>-->
					<!--</resource>-->
				<!--</resources>-->
			<!--</configuration>-->
		<!--</plugin>-->

	</plugins>
	<finalName>learning-camunda</finalName>
	<!--<resources>-->
	<!--<resource>-->
	<!--<directory>src/main/webapp</directory>-->
	<!--</resource>-->
	<!--</resources>-->
</build>
<!--<repositories>-->
<!--<repository>-->
<!--<id>camunda-bpm-nexus</id>-->
<!--<name>camunda-bpm-nexus</name>-->
<!--<url>https://app.camunda.com/nexus/content/groups/public</url>-->
<!--</repository>-->
<!--</repositories>-->

</project>
